<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warm.flow.core.mapper.FlowSkipMapper">

    <resultMap type="com.warm.flow.core.domain.entity.FlowSkip" id="FlowLineResult">
        <result property="id" column="id"/>
        <result property="definitionId" column="definition_id"/>
        <result property="nodeId" column="node_id"/>
        <result property="nowNodeCode" column="now_node_code"/>
        <result property="nextNodeCode" column="next_node_code"/>
        <result property="conditionValue" column="condition_value"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectVo">
        select t.id,
               t.definition_id,
               t.node_id,
               t.now_node_code,
               t.next_node_code,
               t.condition_value,
               t.create_time,
               t.update_time
        from flow_skip t
    </sql>

    <sql id="paging_end">
        <if test="page !=null and page.pageNum != null and page.pageSize != null">LIMIT
            #{page.pageNum},#{page.pageSize}
        </if>
    </sql>

    <sql id="order_by">
        <if test="order != null and order != ''">order by ${order}</if>
    </sql>

    <sql id="select_parameter">
        <where>
            <if test="entity.definitionId != null">and t.definition_id = #{entity.definitionId}</if>
            <if test="entity.nodeId != null">and t.node_id = #{entity.nodeId}</if>
            <if test="entity.nowNodeCode != null">and t.now_node_code = #{entity.nowNodeCode}</if>
            <if test="entity.nextNodeCode != null and entity.nextNodeCode != ''">and t.next_node_code =
                #{entity.nextNodeCode}
            </if>
            <if test="entity.conditionValue != null and entity.conditionValue != ''">and t.condition_value =
                #{entity.conditionValue}
            </if>
        </where>
    </sql>

    <select id="selectCount" parameterType="com.warm.flow.core.domain.entity.FlowSkip" resultType="java.lang.Long">
        select count(*) from flow_skip t
        <include refid="select_parameter"/>
    </select>

    <select id="selectList" parameterType="com.warm.flow.core.domain.entity.FlowSkip" resultMap="FlowLineResult">
        <include refid="selectVo"/>
        <include refid="select_parameter"/>
        <include refid="order_by"/>
        <include refid="paging_end"/>
    </select>

    <select id="selectByIds" parameterType="Long" resultMap="FlowLineResult">
        <include refid="selectVo"/>
        where t.id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectById" parameterType="Long" resultMap="FlowLineResult">
        <include refid="selectVo"/>
        where id = #{id}
    </select>

    <insert id="insert" parameterType="com.warm.flow.core.domain.entity.FlowSkip">
        insert into flow_skip
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="definitionId != null">definition_id,</if>
            <if test="nodeId != null">node_id,</if>
            <if test="nowNodeCode != null and nowNodeCode != ''">now_node_code,</if>
            <if test="nextNodeCode != null and nextNodeCode != ''">next_node_code,</if>
            <if test="conditionValue != null">condition_value,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="definitionId != null">#{definitionId},</if>
            <if test="nodeId != null">#{nodeId},</if>
            <if test="nowNodeCode != null and nowNodeCode != ''">#{nowNodeCode},</if>
            <if test="nextNodeCode != null and nextNodeCode != ''">#{nextNodeCode},</if>
            <if test="conditionValue != null">#{conditionValue},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.warm.flow.core.domain.entity.FlowSkip">
        update flow_skip
        <trim prefix="SET" suffixOverrides=",">
            <if test="definitionId != null">definition_id = #{definitionId},</if>
            <if test="nodeId != null">node_id = #{nodeId},</if>
            <if test="nowNodeCode != null and nowNodeCode != ''">now_node_code = #{nowNodeCode},</if>
            <if test="nextNodeCode != null and nextNodeCode != ''">next_node_code = #{nextNodeCode},</if>
            <if test="conditionValue != null">condition_value = #{conditionValue},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="Long">
        delete
        from flow_skip
        where id = #{id}
    </delete>

    <delete id="deleteByIds" parameterType="Long">
        delete from flow_skip where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByNodeId" parameterType="Long">
        delete
        from flow_skip
        where node_id = #{nodeId}
    </delete>

    <delete id="deleteByNodeIds" parameterType="Long">
        delete from flow_skip where node_id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>
