<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.monkey.flow.core.mapper.FlowDefinitionMapper">
    <resultMap type="com.monkey.flow.core.domain.entity.FlowDefinition" id="FlowDefinitionResult">
        <result property="id"    column="id"    />
        <result property="flowCode"    column="flow_code"    />
        <result property="flowName"    column="flow_name"    />
        <result property="version"    column="version"    />
        <result property="isPublish"    column="is_publish"    />
        <result property="fromCustom"    column="from_custom"    />
        <result property="fromPath"    column="from_path"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectVo">
        select t.id, t.flow_code, t.flow_name, t.version, t.is_publish, t.from_custom, t.from_path, t.create_time,
        t.update_time from flow_definition t
    </sql>

    <sql id="paging_end">
        <![CDATA[
       	  LIMIT #{pageNum},#{pageSize}
       	]]>
    </sql>

    <sql id="select_parameter">
        <where>
            <if test="flowCode != null  and flowCode != ''"> and t.flow_code = #{flowCode}</if>
            <if test="flowName != null  and flowName != ''"> and t.flow_name like concat('%', #{flowName}, '%')</if>
            <if test="version != null  and version != ''"> and t.version = #{version}</if>
            <if test="isPublish != null "> and t.is_publish = #{isPublish}</if>
        </where>
    </sql>

    <select id="selectPage" parameterType="com.monkey.flow.core.domain.entity.FlowDefinition" resultMap="FlowDefinitionResult">
        <include refid="selectVo"/>
        <include refid="select_parameter"/>
        order by t.create_time desc
        <include refid="paging_end"/>
    </select>

    <select id="selectCount" parameterType="com.monkey.flow.core.domain.entity.FlowDefinition" resultType="java.lang.Long">
        select count(*) from flow_definition t
        <include refid="select_parameter"/>
    </select>

    <select id="selectList" parameterType="com.monkey.flow.core.domain.entity.FlowDefinition" resultMap="FlowDefinitionResult">
        <include refid="selectVo"/>
        <include refid="select_parameter"/>
        order by t.create_time desc
    </select>

    <select id="selectById" parameterType="Long" resultMap="FlowDefinitionResult">
        <include refid="selectVo"/>
        where id = #{id}
    </select>

    <select id="selectByIds" parameterType="Long" resultMap="FlowDefinitionResult">
        <include refid="selectVo"/>
        where t.id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="queryByCodeList" resultMap="FlowDefinitionResult" parameterType="java.util.List">
        <include refid="selectVo"/>
        where t.flow_code in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <insert id="insert" parameterType="com.monkey.flow.core.domain.entity.FlowDefinition">
        insert into flow_definition
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="flowCode != null and flowCode != ''">flow_code,</if>
            <if test="flowName != null and flowName != ''">flow_name,</if>
            <if test="version != null and version != ''">version,</if>
            <if test="isPublish != null">is_publish,</if>
            <if test="fromCustom != null">from_custom,</if>
            <if test="fromPath != null">from_path,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="flowCode != null and flowCode != ''">#{flowCode},</if>
            <if test="flowName != null and flowName != ''">#{flowName},</if>
            <if test="version != null and version != ''">#{version},</if>
            <if test="isPublish != null">#{isPublish},</if>
            <if test="fromCustom != null">#{fromCustom},</if>
            <if test="fromPath != null">#{fromPath},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.monkey.flow.core.domain.entity.FlowDefinition">
        update flow_definition
        <trim prefix="SET" suffixOverrides=",">
            <if test="flowCode != null and flowCode != ''">flow_code = #{flowCode},</if>
            <if test="flowName != null and flowName != ''">flow_name = #{flowName},</if>
            <if test="version != null and version != ''">version = #{version},</if>
            <if test="isPublish != null">is_publish = #{isPublish},</if>
            <if test="fromCustom != null">from_custom = #{fromCustom},</if>
            <if test="fromPath != null">from_path = #{fromPath},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="closeFlowByCodeList"  parameterType="java.util.List">
        update flow_definition set is_publish = 9
        where flow_code in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <delete id="deleteById" parameterType="Long">
        delete from flow_definition where id = #{id}
    </delete>

    <delete id="deleteByIds" parameterType="Long">
        delete from flow_definition where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteNodeByDefIds" parameterType="Long">
        delete from flow_node where definition_id in
        <foreach item="definitionId" collection="list" open="(" separator="," close=")">
            #{definitionId}
        </foreach>
    </delete>

    <delete id="deleteNodeByDefId" parameterType="Long">
        delete from flow_node where definition_id = #{definitionId}
    </delete>

    <delete id="deleteSkipByDefIds" parameterType="Long">
        delete from flow_skip where definition_id in
        <foreach item="definitionId" collection="list" open="(" separator="," close=")">
            #{definitionId}
        </foreach>
    </delete>

    <delete id="deleteSkipByDefId" parameterType="Long">
        delete from flow_skip where definition_id = #{definitionId}
    </delete>
</mapper>
